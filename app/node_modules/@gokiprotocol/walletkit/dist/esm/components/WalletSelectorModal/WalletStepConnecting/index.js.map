{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/components/WalletSelectorModal/WalletStepConnecting/index.tsx"],"names":[],"mappings":";AAAA,6CAA6C;AAC7C,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AACrC,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,EAAE,iBAAiB,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AACnE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACzD,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAE/C,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,qBAAqB,CAAC;AAE7D,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAS5D,MAAM,CAAC,MAAM,oBAAoB,GAAoB,CAAC,EACpD,OAAO,EACP,IAAI,EACJ,MAAM,EACN,UAAU,GACJ,EAAE,EAAE;IACV,MAAM,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC;IACrC,MAAM,IAAI,GACR,OAAO,kBAAkB,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAC5C,cACE,GAAG,EAAE,kBAAkB,CAAC,IAAI,EAC5B,GAAG,EAAE,mBAAmB,kBAAkB,CAAC,IAAI,EAAE,GACjD,CACH,CAAC,CAAC,CAAC,CACF,KAAC,kBAAkB,CAAC,IAAI,KAAG,CAC5B,CAAC;IACJ,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,SAAS,EAAE,CAAC;IACpD,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAgB,IAAI,CAAC,CAAC;IAExD,MAAM,eAAe,GACnB,QAAQ;QACR,CAAC,IAAI,CAAC,IAAI,KAAK,iBAAiB,CAAC,MAAM;YACrC,IAAI,CAAC,IAAI,KAAK,iBAAiB,CAAC,QAAQ,CAAC,CAAC;IAE9C,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,IAAI,EAAE;QACxC,IAAI;YACF,MAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,QAAQ,CAAC,IAAI,CAAC,CAAC;SAChB;QAAC,OAAO,CAAC,EAAE;YACV,QAAQ,CAAE,CAAW,CAAC,OAAO,CAAC,CAAC;SAChC;IACH,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAE1B,iDAAiD;IACjD,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,eAAe,EAAE;YACnB,OAAO;SACR;QACD,oCAAoC;QACpC,MAAM,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE;YAC9B,KAAK,UAAU,EAAE,CAAC;QACpB,CAAC,EAAE,CAAC,CAAC,CAAC;QACN,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACnC,mDAAmD;QACnD,uDAAuD;IACzD,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,gDAAgD;IAChD,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,MAAM,IAAI,SAAS,EAAE;YACvB,UAAU,aAAV,UAAU,uBAAV,UAAU,EAAI,CAAC;SAChB;IACH,CAAC,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;IAEpC,OAAO,CACL,KAAC,OAAO,cACN,MAAC,iBAAiB,eACf,KAAK,CAAC,CAAC,CAAC,CACP,MAAC,gBAAgB,eACf,KAAC,UAAU,0CAAqC,EAChD,KAAC,sBAAsB,cAAE,KAAK,GAA0B,EACxD,KAAC,sBAAsB,cACrB,YACE,GAAG,EAAE,GAAG,CAAA;;;iBAGP,EACD,IAAI,EAAC,GAAG,EACR,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;oCACb,CAAC,CAAC,eAAe,EAAE,CAAC;oCACpB,CAAC,CAAC,cAAc,EAAE,CAAC;oCACnB,KAAK,UAAU,EAAE,CAAC;gCACpB,CAAC,sBAGC,GACmB,IACR,CACpB,CAAC,CAAC,CAAC,CACF,MAAC,gBAAgB,eACf,KAAC,UAAU,gCAA2B,EACrC,eAAe,CAAC,CAAC,CAAC,CACjB,MAAC,sBAAsB,yBACd,GAAG,EACV,YACE,GAAG,EAAE,GAAG,CAAA;;;mBAGP,EACD,IAAI,EAAC,GAAG,EACR,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;wCACb,CAAC,CAAC,eAAe,EAAE,CAAC;wCACpB,CAAC,CAAC,cAAc,EAAE,CAAC;wCACnB,KAAK,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,OAAO,EAAE,CAAA,CAAC;oCACzB,CAAC,2BAGC,EAAC,GAAG,qBACQ,kBAAkB,CAAC,IAAI,gBAChB,CAC1B,CAAC,CAAC,CAAC,CACF,MAAC,sBAAsB,sCACD,kBAAkB,CAAC,IAAI,gBACpB,CAC1B,IACgB,CACpB,EACD,KAAC,eAAe,cACd,MAAC,QAAQ,eACN,IAAI,EACL,KAAC,mBAAmB,KAAG,EACtB,OAAO,IACC,GACK,EAClB,KAAC,UAAU,cACT,MAAC,UAAU,kCACO,GAAG,EACnB,YACE,IAAI,EAAC,GAAG,EACR,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;oCACb,CAAC,CAAC,eAAe,EAAE,CAAC;oCACpB,CAAC,CAAC,cAAc,EAAE,CAAC;oCACnB,MAAM,aAAN,MAAM,uBAAN,MAAM,EAAI,CAAC;gCACb,CAAC,wBAGC,IACO,GACF,IACK,GACZ,CACX,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,gBAAgB,GAAG,MAAM,CAAC,GAAG,CAAA;;;;;;CAMlC,CAAC;AAEF,MAAM,UAAU,GAAG,MAAM,CAAC,EAAE,CAAA;;;;;;;;CAQ3B,CAAC;AAEF,MAAM,sBAAsB,GAAG,MAAM,CAAC,CAAC,CAAA;;;;;;;;CAQtC,CAAC;AAEF,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAA;;;;;;;;CAQzB,CAAC;AAEF,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAA;;;;;;;;;;;;CAY1B,CAAC;AAEF,MAAM,eAAe,GAAG,MAAM,CAAC,GAAG,CAAA;;;;CAIjC,CAAC;AAEF,MAAM,iBAAiB,GAAG,MAAM,CAAC,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;CAqBnC,CAAC","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { DefaultWalletType, useSolana } from \"@saberhq/use-solana\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { isMobile } from \"react-device-detect\";\n\nimport { BottomArea, FooterText } from \"../ButtonWithFooter\";\nimport type { ProviderInfo } from \"../WalletStepSelect\";\nimport { ConnectingAnimation } from \"./ConnectingAnimation\";\n\ninterface Props {\n  appIcon: React.ReactNode;\n  info: ProviderInfo;\n  onBack?: () => void;\n  onComplete?: () => void;\n}\n\nexport const WalletStepConnecting: React.FC<Props> = ({\n  appIcon,\n  info,\n  onBack,\n  onComplete,\n}: Props) => {\n  const walletProviderInfo = info.info;\n  const icon =\n    typeof walletProviderInfo.icon === \"string\" ? (\n      <img\n        src={walletProviderInfo.icon}\n        alt={`Icon for wallet ${walletProviderInfo.name}`}\n      />\n    ) : (\n      <walletProviderInfo.icon />\n    );\n  const { activate, connected, wallet } = useSolana();\n  const [error, setError] = useState<string | null>(null);\n\n  const isManualConnect =\n    isMobile &&\n    (info.type === DefaultWalletType.Sollet ||\n      info.type === DefaultWalletType.Solflare);\n\n  const doActivate = useCallback(async () => {\n    try {\n      await activate(info.type);\n      setError(null);\n    } catch (e) {\n      setError((e as Error).message);\n    }\n  }, [activate, info.type]);\n\n  // attempt to activate the wallet on initial load\n  useEffect(() => {\n    if (isManualConnect) {\n      return;\n    }\n    // delay so people can see a message\n    const timeout = setTimeout(() => {\n      void doActivate();\n    }, 1);\n    return () => clearTimeout(timeout);\n    // only run this on the first display of this modal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // close modal only when the wallet is connected\n  useEffect(() => {\n    if (wallet && connected) {\n      onComplete?.();\n    }\n  }, [wallet, connected, onComplete]);\n\n  return (\n    <Wrapper>\n      <ConnectingWrapper>\n        {error ? (\n          <ConnectingHeader>\n            <Connecting>Error connecting wallet</Connecting>\n            <ConnectingInstructions>{error}</ConnectingInstructions>\n            <ConnectingInstructions>\n              <a\n                css={css`\n                  color: #696969;\n                  font-weight: bold;\n                `}\n                href=\"#\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  e.preventDefault();\n                  void doActivate();\n                }}\n              >\n                Retry\n              </a>\n            </ConnectingInstructions>\n          </ConnectingHeader>\n        ) : (\n          <ConnectingHeader>\n            <Connecting>Connecting...</Connecting>\n            {isManualConnect ? (\n              <ConnectingInstructions>\n                Please{\" \"}\n                <a\n                  css={css`\n                    color: #696969;\n                    font-weight: bold;\n                  `}\n                  href=\"#\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    void wallet?.connect();\n                  }}\n                >\n                  click here\n                </a>{\" \"}\n                to unlock your {walletProviderInfo.name} wallet.\n              </ConnectingInstructions>\n            ) : (\n              <ConnectingInstructions>\n                Please unlock your {walletProviderInfo.name} wallet.\n              </ConnectingInstructions>\n            )}\n          </ConnectingHeader>\n        )}\n        <AppIconsWrapper>\n          <AppIcons>\n            {icon}\n            <ConnectingAnimation />\n            {appIcon}\n          </AppIcons>\n        </AppIconsWrapper>\n        <BottomArea>\n          <FooterText>\n            Having trouble?{\" \"}\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.stopPropagation();\n                e.preventDefault();\n                onBack?.();\n              }}\n            >\n              Go back\n            </a>\n          </FooterText>\n        </BottomArea>\n      </ConnectingWrapper>\n    </Wrapper>\n  );\n};\n\nconst ConnectingHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 9px;\n  margin-top: 68px;\n  margin-bottom: 71px;\n`;\n\nconst Connecting = styled.h2`\n  margin: 0;\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 29px;\n  text-align: center;\n  letter-spacing: -0.02em;\n  color: #000000;\n`;\n\nconst ConnectingInstructions = styled.p`\n  margin: 0;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 17px;\n  text-align: center;\n  letter-spacing: -0.02em;\n  color: #696969;\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst AppIcons = styled.div`\n  display: grid;\n  grid-template-columns: 48px 1fr 48px;\n  grid-column-gap: 20px;\n  align-items: center;\n  width: 192px;\n\n  & > img,\n  & > svg {\n    width: 48px;\n    height: 48px;\n  }\n`;\n\nconst AppIconsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst ConnectingWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: calc(100% - 154px);\n\n  background: #f9f9f9;\n  border-radius: 32px 32px 8px 8px;\n\n  animation: fadeIn 0.2s forwards;\n  animation-timing-function: ease-out;\n\n  @keyframes fadeIn {\n    0% {\n      bottom: -300px;\n    }\n    100% {\n      bottom: 0;\n    }\n  }\n`;\n"]}