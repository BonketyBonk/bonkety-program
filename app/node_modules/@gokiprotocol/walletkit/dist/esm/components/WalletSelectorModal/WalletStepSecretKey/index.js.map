{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/components/WalletSelectorModal/WalletStepSecretKey/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport {\n  DEFAULT_WALLET_PROVIDERS,\n  DefaultWalletType,\n  useSolana,\n} from \"@saberhq/use-solana\";\nimport { Keypair } from \"@solana/web3.js\";\nimport { useMemo, useState } from \"react\";\n\nimport { LabeledInput } from \"../../LabeledInput\";\nimport { ButtonWithFooter } from \"../ButtonWithFooter\";\n\ninterface Props {\n  onBack?: () => void;\n  onError: (err: Error) => void;\n  onSuccess?: () => void;\n}\n\nexport const WalletStepSecretKey: React.FC<Props> = ({\n  onBack,\n  onSuccess,\n  onError,\n}: Props) => {\n  const [keypairStr, setKeypairStr] = useState<string>(\n    JSON.stringify([...Keypair.generate().secretKey])\n  );\n  const [keypair, keypairErr] = useMemo(() => {\n    try {\n      return [\n        Keypair.fromSecretKey(\n          Uint8Array.from(JSON.parse(keypairStr) as number[])\n        ),\n        null,\n      ];\n    } catch (e) {\n      return [null, e as Error];\n    }\n  }, [keypairStr]);\n  const { activate } = useSolana();\n\n  return (\n    <Wrapper>\n      <IconWrapper>\n        <DEFAULT_WALLET_PROVIDERS.SecretKey.icon />\n      </IconWrapper>\n      <h2>Enter a JSON Keypair</h2>\n      <p\n        css={css`\n          color: red !important;\n        `}\n      >\n        Warning: do not use this outside of testing. If you were told to go here\n        by someone else, don't do it.\n      </p>\n      <Fields>\n        <LabeledInput\n          label=\"Keypair (JSON)\"\n          placeholder=\"Enter a JSON keypair string\"\n          name=\"account\"\n          value={keypairStr}\n          onChange={(e) => {\n            setKeypairStr(e.target.value);\n          }}\n        />\n        {keypair && (\n          <LabeledInput\n            id=\"secretKeyConnectorPubkey\"\n            label=\"Public Key\"\n            name=\"publicKey\"\n            disabled\n            value={keypair?.publicKey.toString()}\n          />\n        )}\n      </Fields>\n      {keypairErr && (\n        <p>\n          <span\n            css={css`\n              color: red;\n            `}\n          >\n            Error: {keypairErr.message}\n          </span>\n        </p>\n      )}\n      <ButtonWithFooter\n        id=\"walletKit_secretKey_continue\"\n        disabled={!keypair}\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        onClick={async () => {\n          if (!keypair) {\n            throw new Error(\"keypair missing\");\n          }\n          try {\n            await activate(DefaultWalletType.SecretKey, {\n              secretKey: [...keypair.secretKey],\n            });\n          } catch (e) {\n            onError?.(e as Error);\n            return;\n          }\n          onSuccess?.();\n        }}\n        footer={\n          <>\n            Having trouble?{\" \"}\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                onBack?.();\n              }}\n            >\n              Go back\n            </a>\n          </>\n        }\n      >\n        Continue\n      </ButtonWithFooter>\n    </Wrapper>\n  );\n};\n\nconst IconWrapper = styled.div`\n  & > svg,\n  & > img {\n    width: 36px;\n    height: 36px;\n  }\n  margin-bottom: 32px;\n`;\n\nconst Wrapper = styled.div`\n  padding: 28px;\n  padding-top: 67px;\n\n  & > h2 {\n    font-weight: bold;\n    font-size: 20px;\n    line-height: 25px;\n    letter-spacing: -0.02em;\n    color: #000000;\n  }\n\n  & > p {\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 18px;\n    letter-spacing: -0.02em;\n    color: #696969;\n  }\n`;\n\nconst Fields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n`;\n"]}