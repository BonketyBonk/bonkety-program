import { jsx as _jsx, jsxs as _jsxs } from "@emotion/react/jsx-runtime";
import { css } from "@emotion/react";
import { useEffect, useMemo, useState } from "react";
export const ConnectingAnimation = ({ fill = "#6764FB", frameMs = 160, }) => {
    const [now, setNow] = useState(Date.now());
    useEffect(() => {
        const interval = setInterval(() => {
            setNow(Date.now());
        }, frameMs);
        return () => clearInterval(interval);
    }, [frameMs]);
    const frame = useMemo(() => Math.floor(now / frameMs) % 7, [frameMs, now]);
    return (_jsxs("svg", { width: "56", height: "12", viewBox: "0 0 56 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", css: css `
        circle {
          transition: fill 0.4s ease;
        }
      `, children: [_jsx("circle", { cx: "2.5", cy: "2.5", r: "2.5", fill: frame === 0 ? fill : "#dedede" }), _jsx("circle", { cx: "19.5", cy: "2.5", r: "2.5", fill: frame === 2 ? fill : "#DEDEDE" }), _jsx("circle", { cx: "36.5", cy: "2.5", r: "2.5", fill: frame === 4 ? fill : "#DEDEDE" }), _jsx("circle", { cx: "53.5", cy: "2.5", r: "2.5", fill: frame === 6 ? fill : "#dedede" }), _jsx("circle", { cx: "12.5", cy: "9.5", r: "2.5", fill: frame === 1 ? fill : "#dedede" }), _jsx("circle", { cx: "29.5", cy: "9.5", r: "2.5", fill: frame === 3 ? fill : "#dedede" }), _jsx("circle", { cx: "46.5", cy: "9.5", r: "2.5", fill: frame === 5 ? fill : "#dedede" })] }));
};
//# sourceMappingURL=ConnectingAnimation.js.map