import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "@emotion/react/jsx-runtime";
/* eslint-disable jsx-a11y/anchor-is-valid */
import styled from "@emotion/styled";
import { useEffect, useMemo } from "react";
import { ButtonWithFooter } from "../ButtonWithFooter";
export const WalletStepRedirect = ({ info }) => {
    const providerURL = useMemo(() => {
        try {
            return new URL(info.url).hostname;
        }
        catch (e) {
            return info.url;
        }
    }, [info.url]);
    const icon = typeof info.icon === "string" ? (_jsx("img", { src: info.icon, alt: `Icon for wallet ${info.name}` })) : (_jsx(info.icon, {}));
    // autoredirect after 1 second
    useEffect(() => {
        const timeout = setTimeout(() => {
            window.open(info.url, "_blank", "noopener");
        }, 1000);
        return () => clearTimeout(timeout);
    });
    return (_jsxs(Wrapper, { children: [_jsx(IconWrapper, { children: icon }), _jsx("h2", { children: "You're being redirected" }), _jsxs("p", { children: ["In order to use ", info.name, ", you must first install their browser extension."] }), _jsxs("p", { children: ["Make sure you only install their wallet from the official", " ", _jsx("strong", { children: providerURL }), " website."] }), _jsx(ButtonWithFooter, { onClick: () => {
                    window.open(info.url, "_blank", "noopener");
                }, footer: _jsxs(_Fragment, { children: ["Finished installing?", " ", _jsx("a", { href: "#", onClick: (e) => {
                                e.preventDefault();
                                e.stopPropagation();
                                window.location.reload();
                            }, children: "Refresh" })] }), children: "Continue" })] }));
};
const IconWrapper = styled.div `
  & > svg,
  & > img {
    width: 36px;
    height: 36px;
  }
  margin-bottom: 32px;
`;
const Wrapper = styled.div `
  padding: 28px;
  padding-top: 67px;

  & > h2 {
    font-weight: bold;
    font-size: 20px;
    line-height: 25px;
    letter-spacing: -0.02em;
    color: #000000;
  }

  & > p {
    font-weight: normal;
    font-size: 14px;
    line-height: 18px;
    letter-spacing: -0.02em;
    color: #696969;
  }
`;
//# sourceMappingURL=index.js.map